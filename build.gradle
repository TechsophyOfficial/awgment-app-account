plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.0.0'
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group 'com.techsophy.tsf'
version '1.2.0'
description = 'tp-app-account'

sonarqube {
    properties {
        property "sonar.projectKey", "TechsophyOfficial_awgment-app-account"
        property "sonar.organization", "techsophyofficial"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenLocal()
    mavenCentral()
}

jib {
	container {
		jvmFlags = [
				'-Dotel.exporter=jaeger',
				'-Dotel.exporter.jaeger.endpoint=http://jaeger:14250',
				'-Dotel.exporter.jaeger.service.name=account-app',
				'-Dapplication.name=account-app',
				'-javaagent:/opentelemetry-javaagent-all.jar'
		]
	}
}

dependencies {
    implementation 'com.techsophy:awgment-commons:0.1.3'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework:spring-aspects:5.3.20'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.8'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.2'
    implementation 'org.springframework.cloud:spring-cloud-dependencies:2021.0.2'
    implementation "commons-io:commons-io:2.11.0"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'io.github.origin-energy:java-snapshot-testing-junit5:3.2.7'

    implementation 'com.opencsv:opencsv:5.6'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'

    implementation "io.mongock:mongock:5.0.32"
    implementation "io.mongock:mongock-springboot:5.0.32"
    implementation "io.mongock:mongodb-springdata-v3-driver:5.0.32"

    implementation 'com.techsophy:id-generator:2.0.0'
    implementation 'com.techsophy:multitenancy-mongo:1.0.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    
    implementation 'org.json:json:20220320'

    implementation 'org.springframework.security:spring-security-test:5.6.3'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: "com.vaadin.external.google", module:"android-json"
    }
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        html.enabled true
    }
}

jar{
    enabled = false
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }

    }
}
check.dependsOn jacocoTestCoverageVerification

//Integration test configuration
sourceSets{
    integrationTest {
        java{
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')

        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}


tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    useJUnitPlatform()
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
    outputs.upToDateWhen { false }
}
check.dependsOn compileIntegrationTestJava